TARGET = pa1
GCC = gcc
CFLAGS = -g -std=c99 -Wall -Wshadow -Wvla -Werror -pedantic

CC = $(GCC) $(CFLAGS)

SRCS = pa1.c shell_array.c shell_list.c

OBJS = $(SRCS:%.c=%.o)
VALGRIND =  valgrind --tool=memcheck --verbose --leak-check=full --log-file

$(TARGET): $(OBJS)
    $(CC) $(OBJS) -o $(TARGET)

.c.o:
    $(GCC) $(CFLAGS) -c $*.c

testmemory: $(TARGET)
    $(VALGRIND)=./valgrind.log ./pa1 -a examples/empty.b output/emptya.b
    $(VALGRIND)=./valgrind.log ./pa1 -l examples/empty.b output/emptyl.b
    $(VALGRIND)=./valgrind.log ./pa1 -a examples/15.b output/15a.b
    $(VALGRIND)=./valgrind.log ./pa1 -l examples/15.b output/15l.b
    $(VALGRIND)=./valgrind.log ./pa1 -a examples/1000.b output/1000a.b
    $(VALGRIND)=./valgrind.log ./pa1 -l examples/1000.b output/1000l.b
    $(VALGRIND)=./valgrind.log ./pa1 -a examples/10000.b output/10000a.b
    $(VALGRIND)=./valgrind.log ./pa1 -l examples/10000.b output/10000l.b
    $(VALGRIND)=./valgrind.log ./pa1 -a examples/100000.b output/100000a.b
    $(VALGRIND)=./valgrind.log ./pa1 -l examples/100000.b output/100000l.b
    $(VALGRIND)=./valgrind.log ./pa1 -a examples/1000000.b output/1000000a.b
    $(VALGRIND)=./valgrind.log ./pa1 -l examples/1000000.b output/1000000l.b

testall: test1 test2

test1: $(TARGET)
    ./pa1 -a examples/15.b output/15sa.b
    diff output/15sa.b examples/15sa.b
    ./pa1 -l examples/15.b output/15sl.b
    diff output/15sl.b examples/15sl.b
test2: $(TARGET)
    ./pa1 -a examples/1K.b output/1Ksa.b
    diff output/1Ksa.b examples/1Ksa.b
    ./pa1 -l examples/1K.b output/1Ksl.b
    diff output/1Ksl.b examples/1Ksl.b

clean: # remove all machine generated files
    rm -f sort *.o output/*
